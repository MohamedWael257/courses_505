import React from "react";
import { useTranslations } from "next-intl";
type Props = {
  status: any;
  orderId: any;
  orderDate: any;
};

export default function OrderDate({ status, orderId, orderDate }: Props) {
  const t = useTranslations("");
  return (
    <>
      <div className="bg-white p-4 rounded-lg mb-4">
        <h2 className="text-text  text-lg font-medium   leading-7 text-start mb-3">
          {t("Text.orderId", { count: " " })}
          <span className="text-base font-medium   leading-6 text-secondrydark">
            {orderId}
          </span>
        </h2>
        <div className="flex gap-3 items-center">
          {(status == "pending" ||
            status == "preparing" ||
            status == "delivered_for_shipment" ||
            status == "shipped") && (
            <div className="relative mb-2 w-10 h-10 flex justify-center items-center animate-pulseOpacity">
              <div className="absolute w-full h-full rounded-full bg-greenBackground "></div>
              <div className="relative w-6 h-6 rounded-full bg-greenCircle"></div>
            </div>
          )}
          {(status == "delivered_to_customer" || status == "returned") && (
            <svg
              width="40"
              height="40"
              viewBox="0 0 40 40"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M15.6676 6.81184L15.6677 6.81196L15.678 6.80299L18.2905 4.52324C19.2355 3.73014 20.7868 3.73464 21.7096 4.52306C21.7098 4.52324 21.71 4.52342 21.7102 4.5236L24.3405 6.78766C24.3408 6.78793 24.3411 6.78821 24.3415 6.78848C24.6625 7.06639 25.0946 7.29343 25.5182 7.45084C25.9422 7.60837 26.4152 7.71758 26.8335 7.71758H29.6668C31.1021 7.71758 32.2835 8.89895 32.2835 10.3342V13.1676C32.2835 13.5933 32.3923 14.0664 32.5506 14.4901C32.7088 14.9134 32.9361 15.3403 33.2127 15.6598C33.2129 15.66 33.2132 15.6603 33.2134 15.6605L35.4774 18.2908C35.4777 18.2911 35.4779 18.2914 35.4782 18.2917C36.2683 19.2167 36.2694 20.7858 35.4929 21.7124C35.4922 21.7132 35.4915 21.714 35.4908 21.7148L33.2301 24.3413C33.2297 24.3417 33.2294 24.342 33.2291 24.3424C32.9513 24.6634 32.7243 25.0954 32.5669 25.519C32.4093 25.943 32.3001 26.416 32.3001 26.8342V29.6676C32.3001 31.1029 31.1188 32.2842 29.6835 32.2842H26.8501C26.4244 32.2842 25.9513 32.3931 25.5276 32.5514C25.1044 32.7095 24.6777 32.9367 24.3583 33.2132C24.3579 33.2135 24.3575 33.2139 24.3572 33.2142L21.7301 35.4755C21.7293 35.4761 21.7286 35.4768 21.7278 35.4774C20.783 36.2716 19.2309 36.2676 18.3077 35.479C18.3074 35.4788 18.307 35.4785 18.3067 35.4782L15.6764 33.2142C15.6761 33.2139 15.6757 33.2135 15.6753 33.2132C15.3543 32.9354 14.9223 32.7084 14.4987 32.551C14.0747 32.3935 13.6017 32.2842 13.1835 32.2842H10.3001C8.86483 32.2842 7.68346 31.1029 7.68346 29.6676V26.8176C7.68346 26.3989 7.57406 25.9301 7.41907 25.5114C7.26377 25.0918 7.04233 24.6677 6.77773 24.3501L6.77775 24.3501L6.77417 24.3459L4.52609 21.6982C4.52578 21.6978 4.52547 21.6974 4.52516 21.6971C3.74732 20.7705 3.74734 19.2312 4.52521 18.3047C4.52551 18.3043 4.5258 18.304 4.52609 18.3036L6.77417 15.6559L6.77419 15.6559L6.77773 15.6517C7.04233 15.3342 7.26377 14.91 7.41907 14.4904C7.57406 14.0717 7.68346 13.6029 7.68346 13.1842V10.3342C7.68346 8.89895 8.86483 7.71758 10.3001 7.71758H13.1835C13.6014 7.71758 14.0738 7.60848 14.496 7.45392C14.9186 7.2992 15.3484 7.07784 15.6676 6.81184ZM19.3077 25.3252L27.3577 17.2752C28.0754 16.5575 28.0754 15.3776 27.3577 14.66C26.6401 13.9423 25.4602 13.9423 24.7425 14.66L18.0001 21.4024L15.2744 18.6766C14.5567 17.959 13.3768 17.959 12.6592 18.6766C11.9416 19.3943 11.9416 20.5742 12.6592 21.2918L16.6925 25.3252C17.0371 25.6697 17.5059 25.8676 18.0001 25.8676C18.4944 25.8676 18.9632 25.6697 19.3077 25.3252Z"
                fill="#03A853"
                stroke="#03A853"
                strokeWidth="1.2"
              />
            </svg>
          )}
          {status == "cancelled" && (
            <svg
              width="40"
              height="40"
              viewBox="0 0 40 40"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19.9997 36.6673C29.2044 36.6673 36.6663 29.2054 36.6663 20.0007C36.6663 10.7959 29.2044 3.33398 19.9997 3.33398C10.7949 3.33398 3.33301 10.7959 3.33301 20.0007C3.33301 29.2054 10.7949 36.6673 19.9997 36.6673Z"
                fill="#C21D20"
              />
              <path
                d="M21.7663 19.9996L25.5996 16.1663C26.0829 15.6829 26.0829 14.8829 25.5996 14.3996C25.1163 13.9163 24.3163 13.9163 23.8329 14.3996L19.9996 18.2329L16.1663 14.3996C15.6829 13.9163 14.8829 13.9163 14.3996 14.3996C13.9163 14.8829 13.9163 15.6829 14.3996 16.1663L18.2329 19.9996L14.3996 23.8329C13.9163 24.3163 13.9163 25.1163 14.3996 25.5996C14.6496 25.8496 14.9663 25.9663 15.2829 25.9663C15.5996 25.9663 15.9163 25.8496 16.1663 25.5996L19.9996 21.7663L23.8329 25.5996C24.0829 25.8496 24.3996 25.9663 24.7163 25.9663C25.0329 25.9663 25.3496 25.8496 25.5996 25.5996C26.0829 25.1163 26.0829 24.3163 25.5996 23.8329L21.7663 19.9996Z"
                fill="white"
              />
            </svg>
          )}

          <div>
            <h2 className="  text-lg text-text font-medium   leading-7 text-start mb-2">
              {/* {t("Text.orderDate")} */}
              {t(`status.${status}_at`)}
            </h2>
            <p className="text-start font-normal text-sm text-secondrydark">
              {status == "pending"
                ? orderDate?.created_at
                : status == "preparing"
                ? orderDate?.prepare_at
                : orderDate[`${status}_at`]}
            </p>
          </div>
        </div>
      </div>
    </>
  );
}
